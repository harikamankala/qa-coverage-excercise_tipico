<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="tests.cucumber.runner.CucumberTest" time="7.996" tests="36" errors="0" skipped="0" failures="10">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise\target\test-classes;C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise\target\classes;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.5.RELEASE\spring-boot-starter-web-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.5.RELEASE\spring-boot-starter-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot\2.1.5.RELEASE\spring-boot-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.5.RELEASE\spring-boot-autoconfigure-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.5.RELEASE\spring-boot-starter-logging-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\katal\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\katal\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.2\log4j-to-slf4j-2.11.2.jar;C:\Users\katal\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;C:\Users\katal\.m2\repository\org\slf4j\jul-to-slf4j\1.7.26\jul-to-slf4j-1.7.26.jar;C:\Users\katal\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\katal\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.5.RELEASE\spring-boot-starter-json-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.5.RELEASE\spring-boot-starter-tomcat-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.19\tomcat-embed-core-9.0.19.jar;C:\Users\katal\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.19\tomcat-embed-el-9.0.19.jar;C:\Users\katal\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.19\tomcat-embed-websocket-9.0.19.jar;C:\Users\katal\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.16.Final\hibernate-validator-6.0.16.Final.jar;C:\Users\katal\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\katal\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\katal\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\katal\.m2\repository\org\springframework\spring-web\5.1.7.RELEASE\spring-web-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-beans\5.1.7.RELEASE\spring-beans-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-webmvc\5.1.7.RELEASE\spring-webmvc-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-aop\5.1.7.RELEASE\spring-aop-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-context\5.1.7.RELEASE\spring-context-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-expression\5.1.7.RELEASE\spring-expression-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.5.RELEASE\spring-boot-starter-data-jpa-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.5.RELEASE\spring-boot-starter-aop-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\aspectj\aspectjweaver\1.9.4\aspectjweaver-1.9.4.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.5.RELEASE\spring-boot-starter-jdbc-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\katal\.m2\repository\org\springframework\spring-jdbc\5.1.7.RELEASE\spring-jdbc-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\katal\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\katal\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\katal\.m2\repository\org\hibernate\hibernate-core\5.3.10.Final\hibernate-core-5.3.10.Final.jar;C:\Users\katal\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\katal\.m2\repository\org\javassist\javassist\3.23.2-GA\javassist-3.23.2-GA.jar;C:\Users\katal\.m2\repository\net\bytebuddy\byte-buddy\1.9.12\byte-buddy-1.9.12.jar;C:\Users\katal\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\katal\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\katal\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\katal\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\katal\.m2\repository\org\springframework\data\spring-data-jpa\2.1.8.RELEASE\spring-data-jpa-2.1.8.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\data\spring-data-commons\2.1.8.RELEASE\spring-data-commons-2.1.8.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-orm\5.1.7.RELEASE\spring-orm-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-tx\5.1.7.RELEASE\spring-tx-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\slf4j\slf4j-api\1.7.26\slf4j-api-1.7.26.jar;C:\Users\katal\.m2\repository\org\springframework\spring-aspects\5.1.7.RELEASE\spring-aspects-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.5.RELEASE\spring-boot-starter-test-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-test\2.1.5.RELEASE\spring-boot-test-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.5.RELEASE\spring-boot-test-autoconfigure-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\katal\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\katal\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\katal\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\katal\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\katal\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\katal\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.12\byte-buddy-agent-1.9.12.jar;C:\Users\katal\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\katal\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\katal\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\katal\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\katal\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\katal\.m2\repository\org\springframework\spring-core\5.1.7.RELEASE\spring-core-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-jcl\5.1.7.RELEASE\spring-jcl-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-test\5.1.7.RELEASE\spring-test-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\katal\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\katal\.m2\repository\io\rest-assured\rest-assured\3.1.1\rest-assured-3.1.1.jar;C:\Users\katal\.m2\repository\org\codehaus\groovy\groovy\2.5.7\groovy-2.5.7.jar;C:\Users\katal\.m2\repository\org\codehaus\groovy\groovy-xml\2.5.7\groovy-xml-2.5.7.jar;C:\Users\katal\.m2\repository\org\apache\httpcomponents\httpclient\4.5.8\httpclient-4.5.8.jar;C:\Users\katal\.m2\repository\org\apache\httpcomponents\httpcore\4.4.11\httpcore-4.4.11.jar;C:\Users\katal\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\katal\.m2\repository\org\apache\httpcomponents\httpmime\4.5.8\httpmime-4.5.8.jar;C:\Users\katal\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\katal\.m2\repository\io\rest-assured\json-path\3.1.1\json-path-3.1.1.jar;C:\Users\katal\.m2\repository\org\codehaus\groovy\groovy-json\2.5.7\groovy-json-2.5.7.jar;C:\Users\katal\.m2\repository\io\rest-assured\rest-assured-common\3.1.1\rest-assured-common-3.1.1.jar;C:\Users\katal\.m2\repository\io\rest-assured\xml-path\3.1.1\xml-path-3.1.1.jar;C:\Users\katal\.m2\repository\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-java\4.3.1\cucumber-java-4.3.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-core\4.3.1\cucumber-core-4.3.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-html\0.2.7\cucumber-html-0.2.7.jar;C:\Users\katal\.m2\repository\io\cucumber\gherkin\5.1.0\gherkin-5.1.0.jar;C:\Users\katal\.m2\repository\io\cucumber\tag-expressions\1.1.1\tag-expressions-1.1.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-expressions\6.2.2\cucumber-expressions-6.2.2.jar;C:\Users\katal\.m2\repository\io\cucumber\datatable\1.1.12\datatable-1.1.12.jar;C:\Users\katal\.m2\repository\io\cucumber\datatable-dependencies\1.1.12\datatable-dependencies-1.1.12.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-junit\4.3.1\cucumber-junit-4.3.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-spring\4.3.1\cucumber-spring-4.3.1.jar;C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise\lib\totallylazy-1.20.jar;C:\Users\katal\.m2\repository\net\masterthought\cucumber-reporting\0.0.24\cucumber-reporting-0.0.24.jar;C:\Users\katal\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar;C:\Users\katal\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\katal\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\katal\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\katal\.m2\repository\velocity-tools\velocity-tools\1.4\velocity-tools-1.4.jar;C:\Users\katal\.m2\repository\joda-time\joda-time\2.10.2\joda-time-2.10.2.jar;C:\Users\katal\.m2\repository\com\google\guava\guava\r09\guava-r09.jar;C:\Users\katal\.m2\repository\org\mockito\mockito-all\1.9.0\mockito-all-1.9.0.jar;C:\Users\katal\.m2\repository\commons-io\commons-io\2.3\commons-io-2.3.jar;C:\Users\katal\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.4\maven-gpg-plugin-1.4.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-plugin-api\2.0.6\maven-plugin-api-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-project\2.0.6\maven-project-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-settings\2.0.6\maven-settings-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-profile\2.0.6\maven-profile-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-artifact-manager\2.0.6\maven-artifact-manager-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-repository-metadata\2.0.6\maven-repository-metadata-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-2\wagon-provider-api-1.0-beta-2.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-plugin-registry\2.0.6\maven-plugin-registry-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-artifact\2.0.6\maven-artifact-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-model\2.0.6\maven-model-2.0.6.jar;C:\Users\katal\.m2\repository\org\codehaus\plexus\plexus-utils\2.0.5\plexus-utils-2.0.5.jar;C:\Users\katal\.m2\repository\org\jsoup\jsoup\1.7.2\jsoup-1.7.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_212\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\katal\AppData\Local\Temp\surefire3832610639267877683\surefirebooter2721221851342125317.jar C:\Users\katal\AppData\Local\Temp\surefire3832610639267877683 2019-10-06T23-06-39_134-jvmRun1 surefire7843756748272013896tmp surefire_02183891252308562671tmp"/>
    <property name="surefire.test.class.path" value="C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise\target\test-classes;C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise\target\classes;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.5.RELEASE\spring-boot-starter-web-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.5.RELEASE\spring-boot-starter-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot\2.1.5.RELEASE\spring-boot-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.5.RELEASE\spring-boot-autoconfigure-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.5.RELEASE\spring-boot-starter-logging-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\katal\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\katal\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.2\log4j-to-slf4j-2.11.2.jar;C:\Users\katal\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;C:\Users\katal\.m2\repository\org\slf4j\jul-to-slf4j\1.7.26\jul-to-slf4j-1.7.26.jar;C:\Users\katal\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\katal\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.5.RELEASE\spring-boot-starter-json-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;C:\Users\katal\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.5.RELEASE\spring-boot-starter-tomcat-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.19\tomcat-embed-core-9.0.19.jar;C:\Users\katal\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.19\tomcat-embed-el-9.0.19.jar;C:\Users\katal\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.19\tomcat-embed-websocket-9.0.19.jar;C:\Users\katal\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.16.Final\hibernate-validator-6.0.16.Final.jar;C:\Users\katal\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\katal\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\katal\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\katal\.m2\repository\org\springframework\spring-web\5.1.7.RELEASE\spring-web-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-beans\5.1.7.RELEASE\spring-beans-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-webmvc\5.1.7.RELEASE\spring-webmvc-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-aop\5.1.7.RELEASE\spring-aop-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-context\5.1.7.RELEASE\spring-context-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-expression\5.1.7.RELEASE\spring-expression-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.5.RELEASE\spring-boot-starter-data-jpa-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.5.RELEASE\spring-boot-starter-aop-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\aspectj\aspectjweaver\1.9.4\aspectjweaver-1.9.4.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.5.RELEASE\spring-boot-starter-jdbc-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\katal\.m2\repository\org\springframework\spring-jdbc\5.1.7.RELEASE\spring-jdbc-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\katal\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\katal\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\katal\.m2\repository\org\hibernate\hibernate-core\5.3.10.Final\hibernate-core-5.3.10.Final.jar;C:\Users\katal\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\katal\.m2\repository\org\javassist\javassist\3.23.2-GA\javassist-3.23.2-GA.jar;C:\Users\katal\.m2\repository\net\bytebuddy\byte-buddy\1.9.12\byte-buddy-1.9.12.jar;C:\Users\katal\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\katal\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\katal\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\katal\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\katal\.m2\repository\org\springframework\data\spring-data-jpa\2.1.8.RELEASE\spring-data-jpa-2.1.8.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\data\spring-data-commons\2.1.8.RELEASE\spring-data-commons-2.1.8.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-orm\5.1.7.RELEASE\spring-orm-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-tx\5.1.7.RELEASE\spring-tx-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\slf4j\slf4j-api\1.7.26\slf4j-api-1.7.26.jar;C:\Users\katal\.m2\repository\org\springframework\spring-aspects\5.1.7.RELEASE\spring-aspects-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\com\h2database\h2\1.4.199\h2-1.4.199.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.5.RELEASE\spring-boot-starter-test-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-test\2.1.5.RELEASE\spring-boot-test-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.5.RELEASE\spring-boot-test-autoconfigure-2.1.5.RELEASE.jar;C:\Users\katal\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\katal\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\katal\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\katal\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\katal\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\katal\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\katal\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.12\byte-buddy-agent-1.9.12.jar;C:\Users\katal\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\katal\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\katal\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\katal\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\katal\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\katal\.m2\repository\org\springframework\spring-core\5.1.7.RELEASE\spring-core-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-jcl\5.1.7.RELEASE\spring-jcl-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\springframework\spring-test\5.1.7.RELEASE\spring-test-5.1.7.RELEASE.jar;C:\Users\katal\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\katal\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\katal\.m2\repository\io\rest-assured\rest-assured\3.1.1\rest-assured-3.1.1.jar;C:\Users\katal\.m2\repository\org\codehaus\groovy\groovy\2.5.7\groovy-2.5.7.jar;C:\Users\katal\.m2\repository\org\codehaus\groovy\groovy-xml\2.5.7\groovy-xml-2.5.7.jar;C:\Users\katal\.m2\repository\org\apache\httpcomponents\httpclient\4.5.8\httpclient-4.5.8.jar;C:\Users\katal\.m2\repository\org\apache\httpcomponents\httpcore\4.4.11\httpcore-4.4.11.jar;C:\Users\katal\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\katal\.m2\repository\org\apache\httpcomponents\httpmime\4.5.8\httpmime-4.5.8.jar;C:\Users\katal\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\katal\.m2\repository\io\rest-assured\json-path\3.1.1\json-path-3.1.1.jar;C:\Users\katal\.m2\repository\org\codehaus\groovy\groovy-json\2.5.7\groovy-json-2.5.7.jar;C:\Users\katal\.m2\repository\io\rest-assured\rest-assured-common\3.1.1\rest-assured-common-3.1.1.jar;C:\Users\katal\.m2\repository\io\rest-assured\xml-path\3.1.1\xml-path-3.1.1.jar;C:\Users\katal\.m2\repository\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-java\4.3.1\cucumber-java-4.3.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-core\4.3.1\cucumber-core-4.3.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-html\0.2.7\cucumber-html-0.2.7.jar;C:\Users\katal\.m2\repository\io\cucumber\gherkin\5.1.0\gherkin-5.1.0.jar;C:\Users\katal\.m2\repository\io\cucumber\tag-expressions\1.1.1\tag-expressions-1.1.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-expressions\6.2.2\cucumber-expressions-6.2.2.jar;C:\Users\katal\.m2\repository\io\cucumber\datatable\1.1.12\datatable-1.1.12.jar;C:\Users\katal\.m2\repository\io\cucumber\datatable-dependencies\1.1.12\datatable-dependencies-1.1.12.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-junit\4.3.1\cucumber-junit-4.3.1.jar;C:\Users\katal\.m2\repository\io\cucumber\cucumber-spring\4.3.1\cucumber-spring-4.3.1.jar;C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise\lib\totallylazy-1.20.jar;C:\Users\katal\.m2\repository\net\masterthought\cucumber-reporting\0.0.24\cucumber-reporting-0.0.24.jar;C:\Users\katal\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar;C:\Users\katal\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\katal\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\katal\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\katal\.m2\repository\velocity-tools\velocity-tools\1.4\velocity-tools-1.4.jar;C:\Users\katal\.m2\repository\joda-time\joda-time\2.10.2\joda-time-2.10.2.jar;C:\Users\katal\.m2\repository\com\google\guava\guava\r09\guava-r09.jar;C:\Users\katal\.m2\repository\org\mockito\mockito-all\1.9.0\mockito-all-1.9.0.jar;C:\Users\katal\.m2\repository\commons-io\commons-io\2.3\commons-io-2.3.jar;C:\Users\katal\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.4\maven-gpg-plugin-1.4.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-plugin-api\2.0.6\maven-plugin-api-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-project\2.0.6\maven-project-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-settings\2.0.6\maven-settings-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-profile\2.0.6\maven-profile-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-artifact-manager\2.0.6\maven-artifact-manager-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-repository-metadata\2.0.6\maven-repository-metadata-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-2\wagon-provider-api-1.0-beta-2.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-plugin-registry\2.0.6\maven-plugin-registry-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-artifact\2.0.6\maven-artifact-2.0.6.jar;C:\Users\katal\.m2\repository\org\apache\maven\maven-model\2.0.6\maven-model-2.0.6.jar;C:\Users\katal\.m2\repository\org\codehaus\plexus\plexus-utils\2.0.5\plexus-utils-2.0.5.jar;C:\Users\katal\.m2\repository\org\jsoup\jsoup\1.7.2\jsoup-1.7.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\katal"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_212\jre"/>
    <property name="basedir" value="C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\katal\AppData\Local\Temp\surefire3832610639267877683\surefirebooter2721221851342125317.jar"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_212\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_212\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_212\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_212\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_212\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_212\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_212\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_212\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_212-b10"/>
    <property name="user.name" value="katal"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_212\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\katal\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\katal\AppData\Local\Temp\"/>
    <property name="java.version" value="1.8.0_212"/>
    <property name="user.dir" value="C:\PERSONAL\HARIKA\Tipico\qa-coverage-excercise"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_212\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_212/bin/server;C:/Program Files/Java/jre1.8.0_212/bin;C:/Program Files/Java/jre1.8.0_212/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Android;C:\Program Files\Java\jdk1.8.0_212\bin;C:\Softwares\apache-maven-3.6.1\bin;C:\Program Files\Git\cmd;C:\Users\katal\AppData\Local\Microsoft\WindowsApps;C:\Users\katal\AppData\Local\GitHubDesktop\bin;C:\Windows\system32;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.212-b10"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_212\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="Verify voucher discount when 0 vouchers applied" classname="As a user of Online shop" time="0.684"/>
  <testcase name="Verify voucher discount when 1 vouchers applied" classname="As a user of Online shop" time="0.195"/>
  <testcase name="Verify voucher discount when 2 vouchers applied" classname="As a user of Online shop" time="0.151"/>
  <testcase name="Verify DELETE `/cart/items/{id}` removes the item from cart" classname="As a user of Online shop" time="0.079"/>
  <testcase name="Verify DELETE `/cart/items/{id}` remove item when item is not in cart" classname="As a user of Online shop" time="0.08">
    <failure message="expected:&lt;&quot;[4]00&quot;&gt; but was:&lt;&quot;[2]00&quot;&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<"[4]00"> but was:<"[2]00">
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:52.006  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:52.006  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:52.010  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:52.010  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7668f8fd, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75566f4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6785786d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5c261c74, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6d38a81d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@41f61188, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@d7c4fcb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@61d527ac, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@498503cb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@380e3122, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@576323ff, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1fc386f8]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
]]></system-out>
  </testcase>
  <testcase name="Verify DELETE `/cart/items/{id}` with bad data" classname="As a user of Online shop" time="0.088"/>
  <testcase name="Verify DELETE `/cart/items/{id}` with empty data" classname="As a user of Online shop" time="0.051"/>
  <testcase name="Verify DELETE `/cart/voucher` removes the voucher from cart" classname="As a user of Online shop" time="0.088"/>
  <testcase name="Verify DELETE `/cart/voucher` when no voucher applied to cart" classname="As a user of Online shop" time="0.06">
    <failure message="expected:&lt;&quot;[4]00&quot;&gt; but was:&lt;&quot;[2]00&quot;&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<"[4]00"> but was:<"[2]00">
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:52.377  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:52.377  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:52.377  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:52.377  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1977b0df, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4a490518, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7890fbf9, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@32ae11c9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@167bae0b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@14980819, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6b286640, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@294a12b5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@628aea61, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3606eee9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1e34840f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6792f2c6]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=? 
        and item_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
]]></system-out>
  </testcase>
  <testcase name="Verify GET /cart when cart is empty" classname="As a user of Online shop" time="0.068"/>
  <testcase name="Verify GET /cart returns the cart" classname="As a user of Online shop" time="0.068"/>
  <testcase name="Verify GET /items fetches all the items" classname="As a user of Online shop" time="0.004"/>
  <testcase name="Verify POST `/order` when items are in cart" classname="As a user of Online shop" time="0.084"/>
  <testcase name="Verify POST `/order` when voucher discount is applied" classname="As a user of Online shop" time="0.094">
    <failure message="expected:&lt;4[3.12]&gt; but was:&lt;4[4.00]&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<4[3.12]> but was:<4[4.00]>
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:52.737  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:52.737  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:52.737  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:52.737  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@317fa5dd, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@477906cf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@65234a9, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4004bfba, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c19bb2a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3599b18, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@143900a6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@712594f4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@30a4a111, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7f6a6d46, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@238a7e3d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7ed5cc8c]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Cart {"total_price":44.0,"price_after_discount":43.12,"items":[{"item":{"id":1,"name":"Star Wars XXVII PC Game DLC 1","price":20.0},"count":1},{"item":{"id":2,"name":"Star Wars XXVII PC Game DLC 2","price":24.0},"count":1}],"discount":0,"voucherDiscount":2}
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=?
]]></system-out>
  </testcase>
  <testcase name="Verify POST `/order` when discount is applied" classname="As a user of Online shop" time="0.104"/>
  <testcase name="Verify POST `/order` when discount and voucher discount is applied" classname="As a user of Online shop" time="0.108">
    <failure message="expected:&lt;2[79].00&gt; but was:&lt;2[85].00&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<2[79].00> but was:<2[85].00>
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:52.963  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:52.963  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:52.967  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:52.967  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@13bf5fd, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2eafb4e7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@32050628, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@18d14de3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@469bd719, org.springframework.test.context.transaction.TransactionalTestExecutionListener@15405ba1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@f6e3b67, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1dc2c13c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@579ee82, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@127320df, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6c3884f5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6778636f]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Cart {"total_price":300.0,"price_after_discount":279.0,"items":[{"item":{"id":5,"name":"Star Wars XXVII PC Game DLC 5 Start Wars Episode III Hero Costumes","price":300.0},"count":1}],"discount":5,"voucherDiscount":2}
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=?
]]></system-out>
  </testcase>
  <testcase name="Verify POST `/order` when no items in cart" classname="As a user of Online shop" time="0.064">
    <failure message="expected:&lt;&quot;[4]00&quot;&gt; but was:&lt;&quot;[2]00&quot;&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<"[4]00"> but was:<"[2]00">
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:53.091  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:53.091  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:53.095  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:53.095  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6a26eee6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4be1c797, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@76bdfc19, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1248f83, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5c28009f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@19b0a9f2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@f4c3e9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@25890ce3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@39b9dc35, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@25da1dc9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3976910, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6e149395]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
]]></system-out>
  </testcase>
  <testcase name="Verify POST `/order` and discount when total price less than 100" classname="As a user of Online shop" time="0.087"/>
  <testcase name="Verify POST `/order` and discount when total price is 100" classname="As a user of Online shop" time="0.092"/>
  <testcase name="Verify POST `/order` and discount when total price is 101" classname="As a user of Online shop" time="0.1">
    <failure message="expected:&lt;[95.95]f&gt; but was:&lt;[101.0]f&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<[95.95]f> but was:<[101.0]f>
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:53.390  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:53.390  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:53.394  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:53.394  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1bfb60b7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@65b1693c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@9a74a93, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@255d4d7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@426bf2f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2cfd9b0a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1f3dafd4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@33622388, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e03bb74, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6e664075, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1c571162, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3e0b1f03]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Cart {"total_price":101.0,"price_after_discount":101.0,"items":[{"item":{"id":4,"name":"Star Wars zz PC Game DLC 4","price":1.0},"count":1},{"item":{"id":3,"name":"Star Wars XXVII PC Game DLC 3","price":100.0},"count":1}],"discount":0,"voucherDiscount":0}
]]></system-out>
  </testcase>
  <testcase name="Verify POST `/order` and discount when total price greater than 101 and less than 500" classname="As a user of Online shop" time="0.124"/>
  <testcase name="Verify POST `/order` and discount when total price is 500" classname="As a user of Online shop" time="0.072"/>
  <testcase name="Verify POST `/order` and discount when total price is 501" classname="As a user of Online shop" time="0.072">
    <failure message="expected:&lt;[450.9]f&gt; but was:&lt;[501.0]f&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<[450.9]f> but was:<[501.0]f>
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:53.734  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:53.734  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:53.738  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:53.738  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@15a6a91f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@493250cf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@24888d8b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@750b200b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55c581e4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@eaa07bb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6eae3730, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@42095996, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3b3a3a92, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@65f36591, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7a7bd9a8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@72b6fa98]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Cart {"total_price":501.0,"price_after_discount":501.0,"items":[{"item":{"id":4,"name":"Star Wars zz PC Game DLC 4","price":1.0},"count":1},{"item":{"id":6,"name":"Star Wars XXVII PC Game DLC 6","price":500.0},"count":1}],"discount":0,"voucherDiscount":0}
]]></system-out>
  </testcase>
  <testcase name="Verify POST `/order` and discount when total price greater than 501 and less than 1000" classname="As a user of Online shop" time="0.096"/>
  <testcase name="Verify POST `/order` and discount when total price is 1000" classname="As a user of Online shop" time="0.084"/>
  <testcase name="Verify PUT `/cart/items/{id}` adds the items to cart" classname="As a user of Online shop" time="0.079"/>
  <testcase name="Verify PUT `/cart/items/{id}` when item is not in store" classname="As a user of Online shop" time="0.071"/>
  <testcase name="Verify PUT `/cart/items/{id}` when item already in cart is added again" classname="As a user of Online shop" time="0.085"/>
  <testcase name="Verify PUT `/cart/items/{id}` with bad data" classname="As a user of Online shop" time="0.072"/>
  <testcase name="Verify PUT `/cart/items/{id}` with empty data" classname="As a user of Online shop" time="0.055"/>
  <testcase name="Verify PUT `/cart/voucher/{id}` applies the voucher to cart" classname="As a user of Online shop" time="0.068"/>
  <testcase name="Verify PUT `/cart/voucher/{id}` when the voucher is already applied" classname="As a user of Online shop" time="0.068">
    <failure message="expected:&lt;&quot;[4]00&quot;&gt; but was:&lt;&quot;[2]00&quot;&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<"[4]00"> but was:<"[2]00">
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:54.541  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:54.541  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:54.545  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:54.545  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@b859355, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1f24e33d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7c3223aa, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7683d632, org.springframework.test.context.support.DirtiesContextTestExecutionListener@513bec8c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@693ed09d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4fc8163, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6c26e588, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@62f73b0c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7dd2a5f7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1d45c4b7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@46146832]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=? 
        and item_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
]]></system-out>
  </testcase>
  <testcase name="Verify PUT `/cart/voucher/{id}` when the voucher is with bad data" classname="As a user of Online shop" time="0.064"/>
  <testcase name="Verify PUT `/cart/voucher/{id}` when the voucher id is more than 10 digits" classname="As a user of Online shop" time="0.107">
    <failure message="expected:&lt;&quot;[4]00&quot;&gt; but was:&lt;&quot;[5]00&quot;&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<"[4]00"> but was:<"[5]00">
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:54.701  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:54.701  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:54.705  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:54.705  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7010c9e4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@28befd62, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@10f60e36, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@8ad182c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7e84af34, org.springframework.test.context.transaction.TransactionalTestExecutionListener@218e186b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@12925d2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@612531a3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3a83cfbc, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6b9fc5c7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@23d07ad3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6b30ff23]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
2019-10-06 23:06:54.781 ERROR 27472 --- [o-auto-1-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: something went wrong!] with root cause

java.lang.NumberFormatException: For input string: "12345678910"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_212]
	at java.lang.Integer.parseInt(Integer.java:583) ~[na:1.8.0_212]
	at java.lang.Integer.parseInt(Integer.java:615) ~[na:1.8.0_212]
	at com.tipico.endpoints.Controllers.addVoucherToTheCart(Controllers.java:82) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_212]

]]></system-out>
  </testcase>
  <testcase name="Verify PUT `/cart/voucher/{id}` when the voucher is with special characters" classname="As a user of Online shop" time="0.052"/>
  <testcase name="Verify PUT `/cart/voucher/{id}` when the voucher id is empty" classname="As a user of Online shop" time="0.084">
    <failure message="expected:&lt;&quot;[4]00&quot;&gt; but was:&lt;&quot;[5]00&quot;&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<"[4]00"> but was:<"[5]00">
]]></failure>
    <system-out><![CDATA[2019-10-06 23:06:54.860  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [tests.cucumber.glue.Steps], using SpringBootContextLoader
2019-10-06 23:06:54.860  INFO 27472 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [tests.cucumber.glue.Steps]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-06 23:06:54.864  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-06 23:06:54.864  INFO 27472 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@54224125, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c013560, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@feab3ae, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@229fe7ab, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64f2b1b4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@11ad327f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4b808427, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@167f9043, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6771fc29, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1f370472, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@50d91a0f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3ace65df]
Hibernate: 
    select
        item0_.id as id1_1_,
        item0_.name as name2_1_,
        item0_.price as price3_1_ 
    from
        item item0_
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    delete 
    from
        items_tracking_table 
    where
        counter_id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
Hibernate: 
    select
        item0_.id as id1_1_0_,
        item0_.name as name2_1_0_,
        item0_.price as price3_1_0_ 
    from
        item item0_ 
    where
        item0_.id=?
Hibernate: 
    update
        cart 
    set
        discount=?,
        total_price=?,
        voucher_discount=? 
    where
        id=?
Hibernate: 
    insert 
    into
        items_tracking_table
        (counter_id, item_id, items) 
    values
        (?, ?, ?)
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.discount as discount2_0_,
        cart0_.total_price as total_pr3_0_,
        cart0_.voucher_discount as voucher_4_0_ 
    from
        cart cart0_ 
    where
        cart0_.id=1
Hibernate: 
    select
        items0_.counter_id as counter_1_2_0_,
        items0_.items as items2_2_0_,
        items0_.item_id as item_id3_0_,
        item1_.id as id1_1_1_,
        item1_.name as name2_1_1_,
        item1_.price as price3_1_1_ 
    from
        items_tracking_table items0_ 
    inner join
        item item1_ 
            on items0_.item_id=item1_.id 
    where
        items0_.counter_id=?
2019-10-06 23:06:54.916 ERROR 27472 --- [o-auto-1-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: something went wrong!] with root cause

java.lang.NumberFormatException: For input string: " "
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_212]
	at java.lang.Integer.parseInt(Integer.java:569) ~[na:1.8.0_212]
	at java.lang.Integer.parseInt(Integer.java:615) ~[na:1.8.0_212]
	at com.tipico.endpoints.Controllers.addVoucherToTheCart(Controllers.java:82) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.19.jar:9.0.19]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_212]

]]></system-out>
  </testcase>
</testsuite>